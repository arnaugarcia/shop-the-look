name: Application CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
    pipeline:
        name: ShopTheLook pipeline
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
        timeout-minutes: 40
        env:
            NODE_VERSION: 14.17.1
            SPRING_OUTPUT_ANSI_ENABLED: DETECT
            SPRING_JPA_SHOW_SQL: false
            JHI_DISABLE_WEBPACK_LOGS: true
            NG_CLI_ANALYTICS: false
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: 14.17.1
            - uses: actions/setup-java@v2
              with:
                  distribution: 'adopt'
                  java-version: '11.x'
            - name: Install node.js packages
              run: npm install
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ secrets.AWS_REGION }}
            - name: Login to ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1
            - name: Run backend test
              run: |
                  chmod +x mvnw
                  npm run ci:backend:test
            - name: Build docker image
              run: ./mvnw package -Pprod,api-docs verify jib:dockerBuild
            - name: Tag docker image
              run: docker tag shop-the-look:latest ${{ secrets.AWS_ECR_REPOSITORY }}/shop-the-look:latest
            - name: Push docker image
              run: docker push ${{ secrets.AWS_ECR_REPOSITORY }}/shop-the-look:latest


